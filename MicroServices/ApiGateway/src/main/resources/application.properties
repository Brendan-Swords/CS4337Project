spring.application.name=api-gateway
spring.main.web-application-type=reactive

#eureka.instance.hostname=localhost
#eureka.client.fetch-registry=false
#eureka.client.register-with-eureka=false

# JPA Configuration
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# API Gateway Configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.lower-case-service-id=true

spring.cloud.gateway.routes[0].id=publishing-service
spring.cloud.gateway.routes[0].uri=http://publishing-service:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/publishing/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/publishing/(?<remaining>.*), /${remaining}
# Deemed adding a filter is better so we don't have to request mapping on every service because if the request mapping is different to the path it won't work so just have everything here.

spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=http://order-service:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/orders/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/orders/(?<remaining>.*), /${remaining}

spring.cloud.gateway.routes[2].id=authentication-service
spring.cloud.gateway.routes[2].uri=http://authentication-service:8084
spring.cloud.gateway.routes[2].predicates[0]=Path=/auth/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/auth/(?<remaining>.*), /${remaining}

