# This workflow builds a Java project with Gradle, caches dependencies, and submits a dependency graph for alerts.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # Check out the code
      - uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle dependencies
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Set up Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: '8.9'

      # Build the project with Gradle
      - name: Build with Gradle Wrapper
        env:  # Environment variables for secrets
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        run: ./gradlew build

      # Run tests
      - name: Run Tests
        run: ./gradlew test


  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Check out the code
      - uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Generate and submit dependency graph
      - name: Generate and submit dependency graph
        uses: gradle/actions/setup-gradle@v4